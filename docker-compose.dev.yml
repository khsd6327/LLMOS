# docker-compose.dev.yml
# 개발 환경용 설정

version: '3.8'

services:
  llmos-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: llmos-dev
    ports:
      - "8501:8501"
      - "8888:8888"  # Jupyter Lab
    environment:
      - LLMOS_DEBUG=true
      - LLMOS_DEV_MODE=true
      - LLMOS_CONFIG_DIR=/app/data/.llm_os_config
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - .:/app
      - llmos_dev_data:/app/data
      - /app/src/llmos/__pycache__
      - /app/tests/__pycache__
    command: >
      sh -c "
        pip install -e .[dev] &&
        streamlit run main.py --server.runOnSave=true
      "
    restart: "no"
    networks:
      - llmos-dev-network

  # 개발용 데이터베이스 (향후 확장)
  postgres-dev:
    image: postgres:13
    container_name: llmos-postgres-dev
    environment:
      POSTGRES_DB: llmos_dev
      POSTGRES_USER: llmos
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - llmos-dev-network
    profiles:
      - database

  # 개발용 Redis (캐싱)
  redis-dev:
    image: redis:alpine
    container_name: llmos-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - llmos-dev-network
    profiles:
      - cache

volumes:
  llmos_dev_data:
  postgres_dev_data:
  redis_dev_data:

networks:
  llmos-dev-network:
    driver: bridge
