# docker-compose.yml
# LLM OS Docker Compose 설정

version: '3.8'

services:
  # 메인 애플리케이션
  llmos:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: llmos-app
    ports:
      - "8501:8501"
    environment:
      - LLMOS_CONFIG_DIR=/app/data/.llm_os_config
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    env_file:
      - .env
    volumes:
      - llmos_data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - llmos-network

  # 리버스 프록시 (프로덕션용)
  nginx:
    image: nginx:alpine
    container_name: llmos-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - llmos
    restart: unless-stopped
    networks:
      - llmos-network
    profiles:
      - production

  # 모니터링 (선택사항)
  prometheus:
    image: prom/prometheus:latest
    container_name: llmos-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - llmos-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: llmos-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - llmos-network
    profiles:
      - monitoring

volumes:
  llmos_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  llmos-network:
    driver: bridge